{"version":3,"sources":["components/Books/BookList/Book/Book.module.css","components/Books/CreateBookModal/CreateBookModal.module.css","containers/BookContainer/BookContainer.module.css","components/Title/Title.module.css","components/Books/BookList/BookList.module.css","Utility/BookStorage/BookStorage.js","components/Title/Title.js","components/Books/BookList/Book/Book.js","components/Books/BookList/BookList.js","components/Books/CreateBookModal/CreateBookModal.js","containers/BookContainer/BookContainer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","bookStorage","Title","props","className","classes","Book","readStatusClasses","ReadStatus","Button","isRead","push","read","unread","style","fontSize","title","author","pages","Buttons","join","onClick","toggleRead","id","DeleteButton","deleteBook","React","memo","books","Object","keys","map","bookID","idx","book","key","BookList","modalClasses","CreateBookModal","backdropClasses","Backdrop","isOpen","hidden","Fragment","closeModal","onSubmit","createBook","type","name","maxLength","pattern","localStorage","length","1","2","3","setItem","JSON","stringify","parse","addBookToLocalStorage","removeBookFromLocalStorage","removeItem","BookContainer","state","createBookModalOpen","createBookHandler","e","preventDefault","newBook","target","value","ID","Date","setState","prevState","booksCopy","closeCreateBookModal","openCreateBookModal","toggleBookReadStatusHandler","booksClone","deleteBookHandler","CreateBookButton","this","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.dc016026.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Book\":\"Book_Book__XVpK7\",\"Button\":\"Book_Button__24yUd\",\"Buttons\":\"Book_Buttons__1cpkC\",\"ReadStatus\":\"Book_ReadStatus__Xn2iv\",\"read\":\"Book_read__3KtxV\",\"unread\":\"Book_unread__1z8-a\",\"DeleteButton\":\"Book_DeleteButton__QrRH-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CreateBookModal\":\"CreateBookModal_CreateBookModal__KPKys\",\"Backdrop\":\"CreateBookModal_Backdrop__VFsv4\",\"hidden\":\"CreateBookModal_hidden__33pgV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BookContainer\":\"BookContainer_BookContainer__rhHwC\",\"CreateBookButton\":\"BookContainer_CreateBookButton__2kAE3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Title\":\"Title_Title__3cQPx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BookList\":\"BookList_BookList__1ggA5\"};","let bookStorage;\nif(localStorage.length < 1) {\n  bookStorage = {\n    1: {title: \"Dune\", author: \"Frank Herbert\", pages: \"634\", isRead: false},\n    2: {title: \"Sample Book\", author: \"Sample Guy\", pages: \"432\", isRead: false},\n    3: {title: \"Test Book\", author: \"Tester\", pages: \"564\", isRead: false}\n  };\n  for(let key of Object.keys(bookStorage)) {\n    localStorage.setItem(key, JSON.stringify(bookStorage[key]));\n  }\n} else {\n  bookStorage = {};\n  for(let key of Object.keys(localStorage)) {\n    bookStorage[key] = JSON.parse(localStorage[key]);\n  }\n}\n\nfunction addBookToLocalStorage(book, id) {\n  localStorage.setItem(id, JSON.stringify(book));\n}\n\nfunction removeBookFromLocalStorage(id) {\n  localStorage.removeItem(id);\n}\n\nexport { bookStorage, addBookToLocalStorage, removeBookFromLocalStorage };","import React from 'react';\n\nimport classes from './Title.module.css';\n\nconst Title = (props) => {\n  return (\n    <div className={classes.Title}>\n      <h1>React Library</h1>\n    </div>\n  );\n};\n\nexport default Title;","import React from 'react';\n\nimport classes from './Book.module.css';\n\nconst Book = (props) => {\n  const readStatusClasses = [classes.ReadStatus, classes.Button];\n  if(props.isRead) readStatusClasses.push(classes.read);\n  else readStatusClasses.push(classes.unread);\n\n  return (\n    <div className={classes.Book}>\n      <h3 style={{fontSize: \"26px\"}}>{props.title}</h3>\n      <h4 style={{fontSize: \"18px\"}}>{props.author}</h4>\n      <p style={{fontSize: \"12px\"}}>Pages: {props.pages}</p>\n      <div className={classes.Buttons}>\n        <div \n          className={readStatusClasses.join(\" \")}\n          onClick={() => props.toggleRead(props.id)}>Read: {props.isRead ? \"âœ“\" : \"x\"}</div>\n        <div \n          className={classes.Button + \" \" + classes.DeleteButton}\n          onClick={() => props.deleteBook(props.id)}>Delete</div>\n      </div>\n    </div>\n  );\n};\n\nexport default Book;","import React from 'react';\n\nimport classes from './BookList.module.css';\nimport Book from './Book/Book';\n\nconst BookList = (props) => {\n  let books = Object.keys(props.books)\n    .map((bookID, idx) => {\n      const book = props.books[bookID];\n      return (\n        <Book\n          key={bookID}\n          id={bookID}\n          title={book.title} \n          author={book.author}\n          pages={book.pages}\n          isRead={book.isRead}\n          toggleRead={props.toggleRead}\n          deleteBook={props.deleteBook} />\n      );\n    });\n\n  return (\n    <div className={classes.BookList}>\n      {books}\n    </div>\n  );\n};\n\nexport default React.memo(BookList);","import React from 'react';\n\nimport classes from './CreateBookModal.module.css';\n\nconst CreateBookModal = (props) => {\n  const modalClasses = [classes.CreateBookModal];\n  const backdropClasses = [classes.Backdrop];\n  if(!props.isOpen) {\n    modalClasses.push(classes.hidden);\n    backdropClasses.push(classes.hidden);\n  }\n\n  return (\n    <React.Fragment>\n      <div \n        className={backdropClasses.join(\" \")}\n        onClick={props.closeModal}></div>\n      <div className={modalClasses.join(\" \")}>\n        <h2>Add new book</h2>\n        <form onSubmit={props.createBook}>\n          <label>Title</label>\n          <input type=\"text\" name=\"title\" maxLength=\"30\"/>\n          <label>Author</label>\n          <input type=\"text\" name=\"author\" maxLength=\"30\"/>\n          <label>Number of pages</label>\n          <input type=\"text\" name=\"pages\" pattern=\"\\d*\" maxLength=\"4\"/>\n          <button>Submit</button>\n        </form>\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default React.memo(CreateBookModal);","import React, { Component } from 'react';\n\nimport classes from './BookContainer.module.css';\nimport BookList from '../../components/Books/BookList/BookList';\nimport CreateBookModal from '../../components/Books/CreateBookModal/CreateBookModal';\nimport {bookStorage, addBookToLocalStorage, removeBookFromLocalStorage} from '../../Utility/BookStorage/BookStorage';\n\n\nclass BookContainer extends Component {\n  state = {\n    books: bookStorage,\n    createBookModalOpen: false,\n  }\n\n  createBookHandler = (e) => {\n    e.preventDefault();\n    const newBook = {\n      title: e.target.title.value,\n      author: e.target.author.value,\n      pages: e.target.pages.value,\n      isRead: false\n    };\n    const ID = new Date() + e.target.author.value + e.target.title.value;\n    this.setState(prevState => {\n      const booksCopy = {...prevState.books};\n      booksCopy[ID] = newBook;\n\n      return {\n        books: booksCopy\n      }\n    });\n    this.closeCreateBookModal();\n    addBookToLocalStorage(newBook, ID);\n  }\n\n  openCreateBookModal = () => {\n    this.setState({ createBookModalOpen: true });\n  }\n\n  closeCreateBookModal = () => {\n    this.setState({ createBookModalOpen: false });\n  }\n\n  toggleBookReadStatusHandler = (bookID) => {\n    this.setState((prevState) => {\n      const booksClone = JSON.parse(JSON.stringify(this.state.books));\n      booksClone[bookID].isRead = !booksClone[bookID].isRead;\n\n      return {\n        books: booksClone,\n      }\n    });\n  }\n\n  deleteBookHandler = (bookID) => {\n    const booksClone = JSON.parse(JSON.stringify(this.state.books));\n    delete booksClone[bookID];\n\n    this.setState({\n      books: booksClone\n    });\n\n    removeBookFromLocalStorage(bookID);\n  }\n\n  render() {\n    return (\n      <div className={classes.BookContainer}>\n        <div \n          className={classes.CreateBookButton}\n          onClick={this.openCreateBookModal}>Add Book</div>\n        <BookList \n          books={this.state.books}\n          toggleRead={this.toggleBookReadStatusHandler}\n          deleteBook={this.deleteBookHandler} />\n        <CreateBookModal \n          createBook={this.createBookHandler}\n          isOpen={this.state.createBookModalOpen}\n          closeModal={this.closeCreateBookModal} />\n      </div>\n    );\n  }\n}\n\nexport default BookContainer;","import React from 'react';\nimport Title from './components/Title/Title';\nimport BookContainer from './containers/BookContainer/BookContainer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Title />\n      <BookContainer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}